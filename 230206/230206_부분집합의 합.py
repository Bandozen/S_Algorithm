arr = [3, 6, 7, 1, 5, 4]
n = len(arr) # n : 원소의 개수

# 우리는 부분집합의 개수를 구하는 공식을 알고 있다.
# 부분집합의 개수 => 2^n
'''
부분집합에 포함이 되면 1로 표시 / 포함되지 않으면 0으로 체크 => 비트연산
부분집합의 개수 => 2^n

[3, 6, 7, 1, 5, 4]
[1, 0, 0, 0, 0, 0] => 0b000001 => 1번째 부분집합
'''
sub_set = []
for i in range(1<<n):
    print(f'{i}번째 부분집합 : ', end = " ")# i번째 부분집합에 대해
    for j in range(n):  # i번째 부분집합이 n개의 원소 중에 j번째 원소를 포함하는지 검사
        if i & (1<<j):  # i를 이진수로 바꿨을 때 j번째 원소가 1인 경우 그 j번째 원소를 포함하는 지 검사
            # print(arr[j], end=(", "))
            sub_set.append(arr[j])
    print(sub_set)
    # if sum(sub_set) == 0:
    #     print("합이 0인 부분집합 :", sub_set)
print()